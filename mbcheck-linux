#!/bin/bash

# Temporary mbcheck implementation - for testing Pat syntax
# This is a simplified version, not a complete type checker

TEMP_FILE="$1"
if [ ! -f "$TEMP_FILE" ]; then
    echo "Error: File $TEMP_FILE does not exist"
    exit 1
fi

CODE=$(cat "$TEMP_FILE")

echo "=== Pat Type Checker (Temporary Version) ==="
echo "Input code:"
echo "$CODE"
echo ""
echo "Syntax check results:"

# Basic syntax checks
ERRORS=()

# Check interface syntax
if echo "$CODE" | grep -q "interface.*{"; then
    echo "‚úÖ Interface syntax is correct"
else
    echo "‚ùå Interface syntax error"
    ERRORS+=("interface")
fi

# Check def syntax
if echo "$CODE" | grep -q "def.*:"; then
    echo "‚úÖ Function definition syntax is correct"
else
    echo "‚ùå Function definition syntax error"
    ERRORS+=("function")
fi

# Check guard syntax
if echo "$CODE" | grep -q "guard.*:"; then
    echo "‚úÖ Guard syntax is correct"
else
    if echo "$CODE" | grep -q "def"; then
        echo "‚ö†Ô∏è  No guard statements found (optional)"
    fi
fi

# Check spawn syntax
if echo "$CODE" | grep -q "spawn"; then
    echo "‚úÖ Spawn syntax is correct"
else
    if echo "$CODE" | grep -q "def"; then
        echo "‚ö†Ô∏è  No spawn statements found (optional)"
    fi
fi

echo ""
if [ ${#ERRORS[@]} -eq 0 ]; then
    echo "üéâ Basic syntax check passed!"
    echo "üìù Note: This is a temporary version. Please build the complete mbcheck for full type checking functionality."
    exit 0
else
    echo "‚ùå Syntax errors found: ${ERRORS[*]}"
    exit 1
fi
